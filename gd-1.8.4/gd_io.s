; Generated by gcc 2.95.4 20010319 (prerelease) [gccsdk 20020112] for ARM/RISC OS
__r0	RN	0
__r1	RN	1
__r2	RN	2
__r3	RN	3
__r4	RN	4
__r5	RN	5
__r6	RN	6
__r7	RN	7
__r8	RN	8
__r9	RN	9
__r10	RN	10
__r11	RN	11
__r12	RN	12
__r13	RN	13
__r14	RN	14
__r15	RN	15
__a1	RN	0
__a2	RN	1
__a3	RN	2
__a4	RN	3
__v1	RN	4
__v2	RN	5
__v3	RN	6
__v4	RN	7
__v5	RN	8
__v6	RN	9
__sl	RN	10
__fp	RN	11
__ip	RN	12
__sp	RN	13
__lr	RN	14
__pc	RN	15
__f0	FN	0
__f1	FN	1
__f2	FN	2
__f3	FN	3
__f4	FN	4
__f5	FN	5
__f6	FN	6
__f7	FN	7
	AREA |C$$code1|, CODE, READONLY
|gcc2_compiled.|
	ALIGN
	EXPORT	|Putword|
	DCB &50, &75, &74, &77
	DCB &6f, &72, &64, &00
	ALIGN
	DCD	-16777208
|Putword|
	; args = 0, pretend = 0, frame = 4, alloca = 0
	; frame_needed = 1, anonymous_args = 0, regs_live[14] = 0
	; nonlocal_label = 0, nonlocal_goto = 0, clobbers lr = 1
	mov	__ip, __sp
	stmfd	__sp!, {__fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	IMPORT	|__rt_stkovf_split_small|
	bllt	|__rt_stkovf_split_small|
	sub	__sp, __sp, #4
	mov	__ip, __a2
	strb	__a1, [__sp, #0]
	cmp	__a1, #0
	addlt	__a1, __a1, #255
	mov	__a1, __a1, asr #8
	strb	__a1, [__sp, #1]
	mov	__a1, __ip
	mov	__a2, __sp
	mov	__a3, #2
	mov	__lr, __pc
	ldr	__pc, [__ip, #12]
	ldmea	__fp, {__fp, __sp, __pc}^
	ALIGN
	EXPORT	|Putchar|
	DCB &50, &75, &74, &63
	DCB &68, &61, &72, &00
	ALIGN
	DCD	-16777208
|Putchar|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 1, anonymous_args = 0, regs_live[14] = 0
	; nonlocal_label = 0, nonlocal_goto = 0, clobbers lr = 1
	mov	__ip, __sp
	stmfd	__sp!, {__fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	IMPORT	|__rt_stkovf_split_small|
	bllt	|__rt_stkovf_split_small|
	mov	__ip, __a1
	mov	__a3, __a2
	and	__ip, __ip, #255
	mov	__a1, __a3
	mov	__a2, __ip
	mov	__lr, __pc
	ldr	__pc, [__a3, #8]
	ldmea	__fp, {__fp, __sp, __pc}^
	ALIGN
	EXPORT	|gdPutC|
	DCB &67, &64, &50, &75
	DCB &74, &43, &00
	ALIGN
	DCD	-16777208
|gdPutC|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 1, anonymous_args = 0, regs_live[14] = 0
	; nonlocal_label = 0, nonlocal_goto = 0, clobbers lr = 1
	mov	__ip, __sp
	stmfd	__sp!, {__fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	IMPORT	|__rt_stkovf_split_small|
	bllt	|__rt_stkovf_split_small|
	mov	__ip, __a1
	mov	__a3, __a2
	and	__ip, __ip, #255
	mov	__a1, __a3
	mov	__a2, __ip
	mov	__lr, __pc
	ldr	__pc, [__a3, #8]
	ldmea	__fp, {__fp, __sp, __pc}^
	ALIGN
	EXPORT	|gdPutWord|
	DCB &67, &64, &50, &75
	DCB &74, &57, &6f, &72
	DCB &64, &00
	ALIGN
	DCD	-16777204
|gdPutWord|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 1, anonymous_args = 0, regs_live[14] = 0
	; nonlocal_label = 0, nonlocal_goto = 0, clobbers lr = 1
	mov	__ip, __sp
	stmfd	__sp!, {__v1, __v2, __fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	IMPORT	|__rt_stkovf_split_small|
	bllt	|__rt_stkovf_split_small|
	mov	__v1, __a1
	mov	__v2, __a2
	mov	__a2, __v1, lsr #8
	mov	__a1, __v2
	and	__a2, __a2, #255
	mov	__lr, __pc
	ldr	__pc, [__v2, #8]
	and	__v1, __v1, #255
	mov	__a1, __v2
	mov	__a2, __v1
	mov	__lr, __pc
	ldr	__pc, [__v2, #8]
	ldmea	__fp, {__v1, __v2, __fp, __sp, __pc}^
	ALIGN
	EXPORT	|gdPutInt|
	DCB &67, &64, &50, &75
	DCB &74, &49, &6e, &74
	DCB &00
	ALIGN
	DCD	-16777204
|gdPutInt|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 1, anonymous_args = 0, regs_live[14] = 0
	; nonlocal_label = 0, nonlocal_goto = 0, clobbers lr = 1
	mov	__ip, __sp
	stmfd	__sp!, {__v1, __v2, __fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	IMPORT	|__rt_stkovf_split_small|
	bllt	|__rt_stkovf_split_small|
	mov	__v2, __a1
	mov	__v1, __a2
	mov	__a1, __v1
	mov	__a2, __v2, lsr #24
	mov	__lr, __pc
	ldr	__pc, [__v1, #8]
	mov	__a2, __v2, lsr #16
	mov	__a1, __v1
	and	__a2, __a2, #255
	mov	__lr, __pc
	ldr	__pc, [__v1, #8]
	mov	__a2, __v2, lsr #8
	mov	__a1, __v1
	and	__a2, __a2, #255
	mov	__lr, __pc
	ldr	__pc, [__v1, #8]
	and	__v2, __v2, #255
	mov	__a1, __v1
	mov	__a2, __v2
	mov	__lr, __pc
	ldr	__pc, [__v1, #8]
	ldmea	__fp, {__v1, __v2, __fp, __sp, __pc}^
	ALIGN
	EXPORT	|gdGetC|
	DCB &67, &64, &47, &65
	DCB &74, &43, &00
	ALIGN
	DCD	-16777208
|gdGetC|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 1, anonymous_args = 0, regs_live[14] = 0
	; nonlocal_label = 0, nonlocal_goto = 0, clobbers lr = 1
	mov	__ip, __sp
	stmfd	__sp!, {__fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	IMPORT	|__rt_stkovf_split_small|
	bllt	|__rt_stkovf_split_small|
	mov	__ip, __a1
	mov	__lr, __pc
	ldr	__pc, [__ip, #0]
	ldmea	__fp, {__fp, __sp, __pc}^
	ALIGN
	EXPORT	|gdGetByte|
	DCB &67, &64, &47, &65
	DCB &74, &42, &79, &74
	DCB &65, &00
	ALIGN
	DCD	-16777204
|gdGetByte|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 1, anonymous_args = 0, regs_live[14] = 0
	; nonlocal_label = 0, nonlocal_goto = 0, clobbers lr = 1
	mov	__ip, __sp
	stmfd	__sp!, {__v1, __fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	IMPORT	|__rt_stkovf_split_small|
	bllt	|__rt_stkovf_split_small|
	mov	__v1, __a1
	mov	__a1, __a2
	mov	__lr, __pc
	ldr	__pc, [__a2, #0]
	cmn	__a1, #1
	strne	__a1, [__v1, #0]
	movne	__a1, #1
	ldmneea	__fp, {__v1, __fp, __sp, __pc}^
|L..9|
	mov	__a1, #0
	ldmea	__fp, {__v1, __fp, __sp, __pc}^
	ALIGN
	EXPORT	|gdGetWord|
	DCB &67, &64, &47, &65
	DCB &74, &57, &6f, &72
	DCB &64, &00
	ALIGN
	DCD	-16777204
|gdGetWord|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 1, anonymous_args = 0, regs_live[14] = 0
	; nonlocal_label = 0, nonlocal_goto = 0, clobbers lr = 1
	mov	__ip, __sp
	stmfd	__sp!, {__v1, __v2, __fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	IMPORT	|__rt_stkovf_split_small|
	bllt	|__rt_stkovf_split_small|
	mov	__v2, __a1
	mov	__v1, __a2
	mov	__a1, __v1
	mov	__lr, __pc
	ldr	__pc, [__v1, #0]
	cmn	__a1, #1
	moveq	__a1, #0
	ldmeqea	__fp, {__v1, __v2, __fp, __sp, __pc}^
|L..12|
	mov	__ip, __a1, asl #8
	str	__ip, [__v2, #0]
	mov	__a1, __v1
	mov	__lr, __pc
	ldr	__pc, [__v1, #0]
	cmn	__a1, #1
	beq	|L..13|
	ldr	__ip, [__v2, #0]
	add	__ip, __a1, __ip
	str	__ip, [__v2, #0]
	mov	__a1, #1
	ldmea	__fp, {__v1, __v2, __fp, __sp, __pc}^
|L..13|
	mov	__a1, #0
	ldmea	__fp, {__v1, __v2, __fp, __sp, __pc}^
	ALIGN
	EXPORT	|gdGetInt|
	DCB &67, &64, &47, &65
	DCB &74, &49, &6e, &74
	DCB &00
	ALIGN
	DCD	-16777204
|gdGetInt|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 1, anonymous_args = 0, regs_live[14] = 0
	; nonlocal_label = 0, nonlocal_goto = 0, clobbers lr = 1
	mov	__ip, __sp
	stmfd	__sp!, {__v1, __v2, __fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	IMPORT	|__rt_stkovf_split_small|
	bllt	|__rt_stkovf_split_small|
	mov	__v2, __a1
	mov	__v1, __a2
	mov	__a1, __v1
	mov	__lr, __pc
	ldr	__pc, [__v1, #0]
	cmn	__a1, #1
	bne	|L..16|
|L..21|
	mov	__a1, #0
	ldmea	__fp, {__v1, __v2, __fp, __sp, __pc}^
|L..16|
	mov	__ip, __a1, asl #24
	str	__ip, [__v2, #0]
	mov	__a1, __v1
	mov	__lr, __pc
	ldr	__pc, [__v1, #0]
	cmn	__a1, #1
	beq	|L..21|
	ldr	__ip, [__v2, #0]
	add	__ip, __ip, __a1, asl #16
	str	__ip, [__v2, #0]
	mov	__a1, __v1
	mov	__lr, __pc
	ldr	__pc, [__v1, #0]
	cmn	__a1, #1
	beq	|L..21|
	ldr	__ip, [__v2, #0]
	add	__ip, __ip, __a1, asl #8
	str	__ip, [__v2, #0]
	mov	__a1, __v1
	mov	__lr, __pc
	ldr	__pc, [__v1, #0]
	cmn	__a1, #1
	beq	|L..19|
	ldr	__ip, [__v2, #0]
	add	__ip, __a1, __ip
	str	__ip, [__v2, #0]
	mov	__a1, #1
	ldmea	__fp, {__v1, __v2, __fp, __sp, __pc}^
|L..19|
	mov	__a1, #0
	ldmea	__fp, {__v1, __v2, __fp, __sp, __pc}^
	ALIGN
	EXPORT	|gdPutBuf|
	DCB &67, &64, &50, &75
	DCB &74, &42, &75, &66
	DCB &00
	ALIGN
	DCD	-16777204
|gdPutBuf|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 1, anonymous_args = 0, regs_live[14] = 0
	; nonlocal_label = 0, nonlocal_goto = 0, clobbers lr = 1
	mov	__ip, __sp
	stmfd	__sp!, {__fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	IMPORT	|__rt_stkovf_split_small|
	bllt	|__rt_stkovf_split_small|
	mov	__ip, __a1
	mov	__lr, __a2
	mov	__a4, __a3
	mov	__a1, __a4
	mov	__a2, __ip
	mov	__a3, __lr
	swi	&9a6cc
	mov	__ip,__a4 ;
	ldr	__a4, [__ip, #12] ;
	swi	&9a6c0	
	mov	__a4,__ip ;
	mov	__lr, __pc
	ldr	__pc, [__a4, #12]
	swi	&9a6cd
	ldmea	__fp, {__fp, __sp, __pc}^
	ALIGN
	EXPORT	|gdGetBuf|
	DCB &67, &64, &47, &65
	DCB &74, &42, &75, &66
	DCB &00
	ALIGN
	DCD	-16777204
|gdGetBuf|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 1, anonymous_args = 0, regs_live[14] = 0
	; nonlocal_label = 0, nonlocal_goto = 0, clobbers lr = 1
	mov	__ip, __sp
	stmfd	__sp!, {__fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	IMPORT	|__rt_stkovf_split_small|
	bllt	|__rt_stkovf_split_small|
	mov	__ip, __a1
	mov	__lr, __a2
	mov	__a4, __a3
	mov	__a1, __a4
	mov	__a2, __ip
	mov	__a3, __lr
	mov	__lr, __pc
	ldr	__pc, [__a4, #4]
	ldmea	__fp, {__fp, __sp, __pc}^
	ALIGN
	EXPORT	|gdSeek|
	DCB &67, &64, &53, &65
	DCB &65, &6b, &00
	ALIGN
	DCD	-16777208
|gdSeek|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 1, anonymous_args = 0, regs_live[14] = 0
	; nonlocal_label = 0, nonlocal_goto = 0, clobbers lr = 1
	mov	__ip, __sp
	stmfd	__sp!, {__fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	IMPORT	|__rt_stkovf_split_small|
	bllt	|__rt_stkovf_split_small|
	mov	__ip, __a1
	mov	__lr, __pc
	ldr	__pc, [__ip, #16]
	ldmea	__fp, {__fp, __sp, __pc}^
	ALIGN
	EXPORT	|gdTell|
	DCB &67, &64, &54, &65
	DCB &6c, &6c, &00
	ALIGN
	DCD	-16777208
|gdTell|
	; args = 0, pretend = 0, frame = 0, alloca = 0
	; frame_needed = 1, anonymous_args = 0, regs_live[14] = 0
	; nonlocal_label = 0, nonlocal_goto = 0, clobbers lr = 1
	mov	__ip, __sp
	stmfd	__sp!, {__fp, __ip, __lr, __pc}
	sub	__fp, __ip, #4
	cmp	__sp, __sl
	IMPORT	|__rt_stkovf_split_small|
	bllt	|__rt_stkovf_split_small|
	mov	__ip, __a1
	mov	__lr, __pc
	ldr	__pc, [__ip, #20]
	ldmea	__fp, {__fp, __sp, __pc}^
	END
