;Assembler header file for DisplayField
;written by DefMod (Oct 26 2000) on Tue Dec 12 19:35:28 2000
;Jonathan Coxhead, jonathan@doves.demon.co.uk, 5 Sept 1995

        [       :LNOT: :DEF: Get_Types
        GBLS    Get_Types
        ]
        [       :LNOT: :DEF: Types_Hdr
Get_Types                       SETS    "GET OSLib:oslib.Hdr.Types"
        |
Get_Types                       SETS    ""
        ]
        $Get_Types

        [       :LNOT: :DEF: Get_Toolbox
        GBLS    Get_Toolbox
        ]
        [       :LNOT: :DEF: Toolbox_Hdr
Get_Toolbox                     SETS    "GET OSLib:oslib.Hdr.Toolbox"
        |
Get_Toolbox                     SETS    ""
        ]
        $Get_Toolbox

        [       :LNOT: :DEF: Get_Gadget
        GBLS    Get_Gadget
        ]
        [       :LNOT: :DEF: Gadget_Hdr
Get_Gadget                      SETS    "GET OSLib:oslib.Hdr.Gadget"
        |
Get_Gadget                      SETS    ""
        ]
        $Get_Gadget

        [       :LNOT: :DEF: Get_Font
        GBLS    Get_Font
        ]
        [       :LNOT: :DEF: Font_Hdr
Get_Font                        SETS    "GET OSLib:oslib.Hdr.Font"
        |
Get_Font                        SETS    ""
        ]
        $Get_Font

        [       :LNOT: :DEF: DisplayField_Hdr
        GBLS    DisplayField_Hdr

;Symbols for constants
Class_DisplayField              *       &1C0
DisplayField_RJustified         *       &2
DisplayField_HCentred           *       &4

;Symbols for structure offsets and sizes
                                ^       0
DisplayField_Gadget_text        #       Toolbox_MsgReference
DisplayField_Gadget_text_limit  #       Int
DisplayField_Gadget             *       @

                                ^       0
DisplayField_Object_text        #       Toolbox_MsgReference
DisplayField_Object_text_limit  #       Int
DisplayField_Object             *       @


;Symbols for SWI's and SWI reason codes
DisplayField_SetValue           *       &1C0
   ;Entry
   ;  R0 = flags (Bits)
   ;  R1 = window (Toolbox_O)
   ;  R2 = &1C0
   ;  R3 = display_field (Toolbox_C)
   ;  R4 -> text (String)

DisplayField_GetValue           *       &1C1
   ;Entry
   ;  R0 = flags (Bits)
   ;  R1 = window (Toolbox_O)
   ;  R2 = &1C1
   ;  R3 = display_field (Toolbox_C)
   ;  R4 = buffer (pointer to Char)
   ;  R5 = size (Int)
   ;Exit
   ;  R5 = used (Int)

DisplayField_SetFont            *       &1C2
   ;Entry
   ;  R0 = flags (Bits)
   ;  R1 = window (Toolbox_O)
   ;  R2 = &1C2
   ;  R3 = display_field (Toolbox_C)
   ;  R4 -> font (String)
   ;  R5 = width (Int)
   ;  R6 = height (Int)

        ]
        END
