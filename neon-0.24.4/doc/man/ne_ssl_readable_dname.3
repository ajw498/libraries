.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "NE_SSL_DNAME" 3 "25 October 2003" "neon 0.24.4" "neon API reference"
.SH NAME
ne_ssl_readable_dname, ne_ssl_dname_cmp \- SSL distinguished name handling
.SH "SYNOPSIS"
.ad l
.hy 0

#include <ne_ssl\&.h>
.sp
.HP 36
const\ char\ *\fBne_ssl_readable_dname\fR\ (const\ ne_ssl_dname\ *\fIdname\fR);
.HP 22
int\ \fBne_ssl_dname_cmp\fR\ (const\ ne_ssl_dname\ *\fIdn1\fR, const\ ne_ssl_dname\ *\fIdn2\fR);
.ad
.hy

.SH "DESCRIPTION"

.PP
The \fBne_ssl_readable_dname\fR function creates a single\-line, human\-readable string out of an \fBne_ssl_dname\fR object\&. The returned string is \fBmalloc\fR()\-allocated, and must be \fBfree\fR()d by the caller\&.

.PP
The \fBne_ssl_dname_cmp\fR function compares two distinguished names, and returns zero if they are equal, or non\-zero otherwise\&.

.SH "RETURN VALUE"

.PP
\fBne_ssl_readable_dname\fR returns a \fBmalloc\fR\-allocated string, and never NULL\&.

.SH "EXAMPLES"

.PP
See \fBne_ssl_cert_subject\fR(3) for an example use of \fBne_ssl_readable_dname\fR\&.

.SH "SEE ALSO"

.PP
\fBne_ssl_cert_subject\fR(3)

.SH AUTHOR
Joe Orton <neon@webdav\&.org>.
