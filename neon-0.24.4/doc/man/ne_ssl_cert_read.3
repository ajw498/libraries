.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "NE_SSL_CERT_READ" 3 "25 October 2003" "neon 0.24.4" "neon API reference"
.SH NAME
ne_ssl_cert_read, ne_ssl_cert_write, ne_ssl_cert_import, ne_ssl_cert_export \- functions to read or write certificates to and from files or strings
.SH "SYNOPSIS"
.ad l
.hy 0

#include <ne_ssl\&.h>
.sp
.HP 38
ne_ssl_certificate\ *\fBne_ssl_cert_read\fR\ (const\ char\ *\fIfilename\fR);
.HP 23
int\ \fBne_ssl_cert_write\fR\ (const\ ne_ssl_certificate\ *\fIcert\fR, const\ char\ *\fIfilename\fR);
.HP 40
ne_ssl_certificate\ *\fBne_ssl_cert_import\fR\ (const\ char\ *\fIdata\fR);
.HP 26
char\ *\fBne_ssl_cert_export\fR\ (const\ ne_ssl_certificate\ *\fIcert\fR);
.ad
.hy

.SH "DESCRIPTION"

.PP
The \fBne_ssl_cert_write\fR function writes a certificate to a file using the PEM encoding\&. The \fBne_ssl_cert_export\fR function returns a base64\-encoded NUL\-terminated string representing the certificate\&. This string is malloc\-allocated and should be destroyed using \fBfree\fR by the caller\&.

.PP
The \fBne_ssl_cert_read\fR function reads a certificate from a PEM\-encoded file, and returns a certificate object\&. The \fBne_ssl_cert_import\fR function returns a certificate object from a base64\-encoded string, \fIdata\fR, as returned by \fBne_ssl_cert_export\fR\&. The certificate object returned by these functions should be destroyed using \fBne_ssl_cert_free\fR(3) after use\&.

.SH "RETURN VALUE"

.PP
\fBne_ssl_cert_read\fR returns NULL if a certificate could not be read from the file\&. \fBne_ssl_cert_write\fR returns non\-zero if the certificate could not be written to the file\&. \fBne_ssl_cert_export\fR always returns a NUL\-terminated string, and never NULL\&. \fBne_ssl_cert_import\fR returns NULL if the string was not a valid base64\-encoded certificate\&.

.SH "ENCODING FORMATS"

.PP
The string produced by \fBne_ssl_cert_export\fR is the base64 encoding of the DER representation of the certificate\&. The file written by \fBne_ssl_cert_write\fR uses the PEM format: this is the base64 encoding of the DER representation with newlines every 64 characters, and start and end marker lines\&.

.SH AUTHOR
Joe Orton <neon@webdav\&.org>.
