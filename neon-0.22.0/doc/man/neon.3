.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "NEON" 3 "9 August 2002" "neon 0.22.0" "neon API reference"
.SH NAME
neon \- neon API conventions
.SH "DESCRIPTION"

.PP
neon is an HTTP and WebDAV client library. The major abstractions exposed are of an HTTP session, created by \fBne_session_create\fR(3); and an HTTP request, created by \fBne_request_create\fR(3). HTTP authentication is handled transparently for server and proxy servers, see \fBne_set_server_auth\fR(3); complete SSL/TLS support is also included, see \fBne_ssl_set_verify\fR(3).

.SH "CONVENTIONS"

.PP
Some conventions are used throughout the neon API, to provide a consistent and simple interface; these are documented below.

.SS "URI paths, WebDAV metadata"

.PP
The path strings passed to any function must be URI-encoded by the application: neon never performs any URI encoding or decoding automatically. WebDAV property names and values must be used un UTF-8.

.SS "Memory handling"

.PP
neon does not attempt to cope gracefully with an out-of-memory situation; instead, by default, \fBabort\fR is called to terminate the application. Optionally an application-provided function be called before abort; see \fBne_oom_callback\fR(3).

.SS "Callbacks and userdata"

.PP
Whenever a callback is registered, a userdata variable is also used to allow the application to associate a context with the callback. The userdata is of type \fBvoid *\fR, allowing any pointer to be used.

.SH "SEE ALSO"

.PP
\fBne_session_create\fR(3), \fBne_malloc\fR(3)

.SH AUTHOR
Joe Orton  <neon@webdav.org>.
