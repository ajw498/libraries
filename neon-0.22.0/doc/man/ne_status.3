.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "NE_STATUS" 3 "9 August 2002" "neon 0.22.0" "neon API reference"
.SH NAME
ne_status \- HTTP status structure
.SH "SYNOPSIS"

.nf
#include <ne_utils.h>

typedef struct {
    int major_version, minor_version;
    int code, klass;
    const char *reason_phrase;
} \fBne_status\fR;
.fi

.SH "DESCRIPTION"

.PP
An \fBne_status\fR type represents an HTTP response status; used in response messages giving a result of request. The major_version and minor_version fields give the HTTP version supported by the server issuing the response. The code field gives the status code of the result (lying between 100 and 999 inclusive), and the klass field gives the class, which is equal to the most significant digit of the status.

.PP
There are five classes of HTTP status code defined by RFC2616:

.TP
1xx
Informational response.

.TP
2xx
Success: the operation was successful

.TP
3xx
Redirection

.TP
4xx
Client error: the request made was incorrect in some manner.

.TP
5xx
Server error

.SH "SEE ALSO"

.PP
\fBne_get_status\fR(3), 

.SH AUTHOR
Joe Orton  <neon@webdav.org>.
