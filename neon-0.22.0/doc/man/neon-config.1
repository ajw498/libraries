.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "NEON-CONFIG" 1 "9 August 2002" "neon 0.22.0" "neon"
.SH NAME
neon-config \- script providing information about installed copy of neon library
.SH "SYNOPSIS"

.nf
\fBneon-config\fR [\fB--prefix\fR]
            [\fB\fB--cflags\fR\fR | \fB\fB--libs\fR\fR | \fB\fB--support\fR \fIfeature\fR\fR | \fB\fB--help\fR\fR | \fB\fB--version\fR\fR]
.fi

.SH "DESCRIPTION"

.PP
The \fBneon-config\fR script provides information about an installed copy of the neon library. The \fB--cflags\fR and \fB--libs\fR options instruct how to compile and link an application against the library; the \fB--version\fR and \fB--support\fR options can help determine whether the library meets the applications requirements.

.SH "OPTIONS"

.TP
\fB--cflags\fR
Print the flags which should be passed to the C compiler when compiling object files, when the object files use neon header files.

.TP
\fB--libs\fR
Print the flags which should be passed to the linker when linking an application which uses the neon library

.TP
\fB--version\fR
Print the version of the library

.TP
\fB--prefix\fR \fIdir\fR
If \fIdir\fR is given; relocate output of \fB--cflags\fR and \fB--libs\fR as if neon was installed in given prefix directory. Otherwise, print the installation prefix of the library.

.TP
\fB--support\fR \fIfeature\fR
The script exits with success if \fIfeature\fR is supported by the library.

.TP
\fB--help\fR
Print help message; includes list of known features and whether they are supported or not.

.SH "EXAMPLE"

.PP
Below is a Makefile fragment which could be used to build an application against an installed neon library, when the \fBneon-config\fR script can be found in \fB$PATH\fR.

.nf
CFLAGS = `neon-config --cflags`
LIBS = `neon-config --libs`
OBJECTS = myapp.o
TARGET = myapp

$(TARGET): $(OBJECTS)
	$(CC) $(LDFLAGS) -o $(TARGET) $(OBJECTS) $(LIBS)

myapp.o: myapp.c
	$(CC) $(CFLAGS) -c myapp.c -o myapp.o
.fi

.SH AUTHOR
Joe Orton  <neon@webdav.org>.
